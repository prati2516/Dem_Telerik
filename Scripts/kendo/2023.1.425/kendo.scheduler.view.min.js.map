{"version":3,"file":"kendo.scheduler.view.min.js","names":["factory","define","amd","kendo","ui","scheduler","$","window","getDate","date","Widget","outerHeight","_outerHeight","keys","math","Math","SPACE","levels","values","key","result","collect","depth","level","idx","length","push","table","tableRows","className","trim","join","scrollbarWidth","ResourceView","Class","extend","init","index","isRtl","enforceAllDaySlot","this","_index","_timeSlotCollections","_daySlotCollections","_isRtl","_enforceAllDaySlot","addTimeSlotCollection","startDate","endDate","_addCollection","addDaySlotCollection","collections","collection","SlotCollection","timeSlotCollectionCount","daySlotCollectionCount","daySlotByPosition","x","y","byDate","_slotByPosition","timeSlotByPosition","collectionIndex","slotIndex","count","nextSlot","slot","at","width","element","offsetWidth","height","offsetHeight","horizontalEnd","offsetLeft","verticalEnd","offsetTop","refresh","timeSlotRanges","startTime","endTime","firstIndex","lastIndex","start","_startSlot","inRange","end","_endSlot","MS_PER_DAY","first","last","_continuousRange","TimeSlotRange","daySlotRanges","isAllDay","DaySlotRange","range","startSlot","endSlot","startIndex","endIndex","ranges","head","tail","slotRanges","event","isDay","_startTime","toUtcTime","_endTime","undefined","isMultiDay","_startCollection","startInRange","_endCollection","endInRange","_getCollections","continuousSlot","reverse","pad","isDaySlot","firstSlot","lastSlot","upSlot","keepCollection","groupByDateVertically","that","_verticalSlot","downSlot","leftSlot","_horizontalSlot","rightSlot","step","swapCollection","_collection","multiday","time","_start","slotByStartDate","slotByEndDate","getSlotCollection","getTimeSlotCollection","getDaySlotCollection","SlotRange","options","innerHeight","events","addEvent","outerRect","snap","_rect","property","top","bottom","left","right","support","startOffset","startSlotDuration","endOffset","endSlotDuration","round","innerRect","innerWidth","groupIndex","_slots","_events","_end","_groupIndex","_collectionIndex","allday","addTimeSlot","isHorizontal","TimeSlot","addDaySlot","eventCount","DaySlot","Slot","clientWidth","clientHeight","timezone","toLocalDate","fn","apply","arguments","offsetX","rtl","offset","difference","duration","floor","children","firstChild","firstChildHeight","firstChildTop","Date","rangeIndex","eventElement","SchedulerView","call","_normalizeOptions","_initDefaultTools","_scrollbar","scrollbar","_resizeHint","_moveHint","_cellId","guid","_resourcesForGroups","_selectedSlots","attr","messages","ariaEventLabel","on","to","allDay","prefix","visibleEndDate","_defaultTools","todayMobile","type","fillMode","text","today","click","_footerTodayClickHandler","bind","attributes","class","fulldayDesktop","icon","showWorkHours","showFullDay","showWorkDay","toggleFullDay","noop","fulldayMobile","setMilliseconds","workDayStart","workDayEnd","_isMobile","mobile","mobileOS","_addResourceView","resourceView","groups","dateForTitle","format","selectedDateFormat","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","_changeGroup","selection","previous","_isGroupedByDate","_changeDate","group","_changeGroupContinuously","_changeViewPeriod","_isInRange","newStart","newEnd","min","max","_horizontalSlots","multiple","method","horizontalRange","isVertical","_isVerticallyGrouped","_normalizeHorizontalSelection","tempSlot","_getNextHorizontalRange","_continuousSlot","_verticalSlots","verticalRange","_normalizeVerticalSelection","_getNextVerticalRange","e","preventDefault","currentDate","timezoneOffset","convert","getTimezoneOffset","trigger","view","name","action","_footerItems","items","_footer","footer","html","appendTo","kendoToolBar","resizable","constrainSelection","move","shift","handled","verticalByDate","slots","DOWN","UP","_updateDirection","LEFT","RIGHT","backward","moveToEventInGroup","selectedEvents","prev","i","lastSelected","_continuousEvents","uid","inArray","moveToEvent","allEvents","_getAllEvents","uniqueAllEvents","_getUniqueEvents","sortedEvents","_getSortedEvents","eventIndex","_getNextEventIndexBySlot","_getStartIdx","_getSelectedSlot","current","candidate","_current","content","has","_scrollTo","select","clearSelection","_selectEvents","_selectSlots","tempIndex","slotStartDate","eventStartDate","getTime","selectedEventIndex","each","concat","exists","j","sort","second","firstStartDate","secondStartDate","cell","replace","selectedStateRegExp","groupEvent","found","groupEvents","add","indexOf","addClass","addDays","_resourceValue","resource","item","valuePrimitive","getter","dataValueField","_setResourceValue","groupLevelMember","value","setter","field","_resourceBySlot","resources","groupedResources","passedChildren","numberOfChildren","resourceIndex","groupOptions","nestedMember","orientation","rowLevels","columnLevels","dateGroupCompensation","groupLevel","_createResizeHint","css","_removeResizeHint","remove","_removeMoveHint","filter","container","elementOffset","elementOffsetDir","containerScroll","scrollTop","containerOffsetDir","bottomDistance","_inverseEventColor","eventColor","eventColorIsDark","Color","isDark","eventBackground","_eventTmpl","template","wrapper","settings","Template","templateSettings","paramName","state","storage","tmpl","eventResources","data","dataSource","eventResource","dataIndex","get","resourceColor","dataColorField","title","dataTextField","color","createLayout","layout","allDayIndex","rows","allDaySlot","splice","_isVirtualized","_trimRowLevels","rowCount","find","append","_topSection","_bottomSection","_updateDomRowLevels","_groupOrientation","_outerWidth","_scroller","virtual","levelMarker","lastGroup","cachedRowLevels","_hasContentToRender","stopAtLevel","parentLevel","parentValue","rowLevelIndex","stop","createNextLayout","trimmedRowLevels","clone","_height","_times","rowSpan","parseInt","_virtualContent","render","_cachedEvents","_tryRenderContent","bufferHeight","_isSchedulerHeightSet","initialHeight","el","style","groupCells","times","_rowLevelIndices","toArray","map","refreshLayout","toolbar","headerHeight","paddingDirection","eq","datesHeader","timesHeader","datesHeaderRows","contentDiv","kineticScrollNeeded","timesTable","removeClass","thElm","columnLevelCount","_datesHeader","dateGroup","closest","wrap","parent","scrollLeft","touchScroller","avoidScrolling","target","movable","_touchScroller","scrollElement","sender","groupIdx","groupLength","_createDateLayout","dates","inner","createDateLayoutConfiguration","_createColumnsLayout","createLayoutConfiguration","_createRowsLayout","selectionByElement","removeAttr","destroy","getKendoToolBar","calendarInfo","getCulture","calendars","standard","prevGroupSlot","nextGroupSlot","_eventOptionsForMove","_updateEventForResize","_updateEventForSelection","_innerElements","countInner","innerCollection","innerSpan","innerEls","isMobile","rowIndex","Array","split","rowHeaderRows","rowsBefore","currentRow","rowspan","columnIndex","dateTableRows","columnLevelIndex","th","column","colspan","allDayTableRows","lastLevel","td","cellContent","_formatEventAriaLabel","labelText","labelMessages","sameDate","toString","re","processor","parts","channels","formats","resolveColor","process","exec","r","g","b","normalizeByte","_createColumns","eventElements","columns","eventRange","columnLength","endOverlaps","configuration","obj","minorTicks","itemParentValue","dataParentValueField","htmlEncode","slice","prototype","charAt","substr","toLowerCase","namedColors","isNaN","percBrightness","sqrt","aqua","azure","beige","black","blue","brown","coral","cyan","darkblue","darkcyan","darkgray","darkgreen","darkorange","darkred","dimgray","fuchsia","gold","goldenrod","gray","green","greenyellow","indigo","ivory","khaki","lightblue","lightgrey","lightgreen","lightpink","lightyellow","lime","limegreen","linen","magenta","maroon","mediumblue","navy","olive","orange","orangered","orchid","pink","plum","purple","red","royalblue","salmon","silver","skyblue","slateblue","slategray","snow","steelblue","tan","teal","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","createColumns","createRows","collidingEvents","elements","slotStart","slotEnd","eventsForSlot","groupEqFilter","isArray","ObservableArray","jQuery"],"sources":["kendo.scheduler.view.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.toolbar'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.view\",\n        name: \"Scheduler View\",\n        category: \"web\",\n        description: \"The Scheduler Common View\",\n        depends: [ \"core\", \"toolbar\" ],\n        hidden: true\n    };\n        kendo.ui.scheduler = {};\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            getDate = kendo.date.getDate,\n            Widget = ui.Widget,\n            outerHeight = kendo._outerHeight,\n            keys = kendo.keys,\n            NS = \".kendoSchedulerView\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            MIN_HORIZONTAL_SCROLL_SIZE = 1024,\n            math = Math,\n            SPACE = \" \";\n\n        function levels(values, key) {\n            var result = [];\n\n            function collect(depth, values) {\n                values = values[key];\n\n                if (values) {\n                    var level = result[depth] = result[depth] || [];\n\n                    for (var idx = 0; idx < values.length; idx++) {\n                        level.push(values[idx]);\n                        collect(depth + 1, values[idx]);\n                    }\n                }\n            }\n\n            collect(0, values);\n\n            return result;\n        }\n\n        function table(tableRows, className) {\n            if (!tableRows.length) {\n                return \"\";\n            }\n\n            return '<table role=\"presentation\" class=\"' + kendo.trim('k-scheduler-table ' + (className || \"\")) + '\">' +\n                   '<tr>' +\n                        tableRows.join(\"</tr><tr>\") +\n                   '</tr>' +\n                   '</table>';\n        }\n\n        function allDayTable(tableRows, className) {\n            if (!tableRows.length) {\n                return \"\";\n            }\n\n            return \"<div style='position:relative'>\" + table(tableRows, className) + \"</div>\";\n        }\n\n        function timesHeader(columnLevelCount, allDaySlot, rowCount) {\n            var tableRows = [];\n\n            if (rowCount > 0) {\n                for (var idx = 0; idx < columnLevelCount; idx++) {\n                    tableRows.push(\"<th>&#8203;</th>\");\n                }\n            }\n\n            if (allDaySlot) {\n                tableRows.push('<th class=\"k-scheduler-times-all-day\">' + allDaySlot.text + '</th>');\n            }\n\n            if (rowCount < 1) {\n               return $();\n            }\n\n            return $('<div class=\"k-scheduler-times\">' + table(tableRows) + '</div>');\n        }\n\n        function content() {\n            return $(\n                '<div class=\"k-scheduler-content\">' +\n                    '<table role=\"presentation\" class=\"k-scheduler-table\"></table>' +\n                '</div>'\n            );\n        }\n        var HINT = '<div class=\"k-marquee k-scheduler-marquee\">' +\n                        '<div class=\"k-marquee-color\"></div>' +\n                        '<div class=\"k-marquee-text\">' +\n                            '<div class=\"k-label-top\"></div>' +\n                            '<div class=\"k-label-bottom\"></div>' +\n                        '</div>' +\n                    '</div>';\n\n\n        var ResourceView = kendo.Class.extend({\n            init: function(index, isRtl, enforceAllDaySlot) {\n                this._index = index;\n                this._timeSlotCollections = [];\n                this._daySlotCollections = [];\n                this._isRtl = isRtl;\n                this._enforceAllDaySlot = enforceAllDaySlot;\n            },\n\n            addTimeSlotCollection: function(startDate, endDate) {\n                return this._addCollection(startDate, endDate, this._timeSlotCollections);\n            },\n\n            addDaySlotCollection: function(startDate, endDate) {\n                return this._addCollection(startDate, endDate, this._daySlotCollections);\n            },\n\n            _addCollection: function(startDate, endDate, collections) {\n                var collection = new SlotCollection(startDate, endDate, this._index, collections.length);\n\n                collections.push(collection);\n\n                return collection;\n            },\n\n            timeSlotCollectionCount: function() {\n                return this._timeSlotCollections.length;\n            },\n\n            daySlotCollectionCount: function() {\n                return this._daySlotCollections.length;\n            },\n\n            daySlotByPosition: function(x, y, byDate) {\n                return this._slotByPosition(x, y, this._daySlotCollections, byDate);\n            },\n\n            timeSlotByPosition: function(x, y, byDate) {\n                return this._slotByPosition(x, y, this._timeSlotCollections, byDate);\n            },\n\n            _slotByPosition: function(x, y, collections, byDate) {\n               for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                   var collection = collections[collectionIndex];\n\n                   for (var slotIndex = 0; slotIndex < collection.count(); slotIndex++) {\n                       var slot = collection.at(slotIndex);\n                       var width = slot.element.offsetWidth;\n                       var height = slot.element.offsetHeight;\n                       var nextSlot;\n\n                       var horizontalEnd = slot.element.offsetLeft + width;\n                       var verticalEnd = slot.element.offsetTop + height;\n\n                       if (!byDate) {\n                            nextSlot = collection.at(slotIndex + 1);\n                       }\n\n                       if (nextSlot) {\n                           if (nextSlot.element.offsetLeft != slot.element.offsetLeft) {\n                               if (this._isRtl) {\n                                   horizontalEnd = slot.element.offsetLeft + (slot.element.offsetLeft - nextSlot.element.offsetLeft);\n                               } else {\n                                   horizontalEnd = nextSlot.element.offsetLeft;\n                               }\n                           } else {\n                               verticalEnd = nextSlot.element.offsetTop;\n                           }\n                       }\n\n                       if (x >= slot.element.offsetLeft && x < horizontalEnd &&\n                           y >= slot.element.offsetTop && y < verticalEnd) {\n                           return slot;\n                       }\n                   }\n               }\n            },\n\n            refresh: function() {\n                var collectionIndex;\n\n                for (collectionIndex = 0; collectionIndex < this._daySlotCollections.length; collectionIndex++) {\n                    this._daySlotCollections[collectionIndex].refresh();\n                }\n\n                for (collectionIndex = 0; collectionIndex < this._timeSlotCollections.length; collectionIndex++) {\n                    this._timeSlotCollections[collectionIndex].refresh();\n                }\n            },\n\n            timeSlotRanges: function(startTime, endTime) {\n                var collections = this._timeSlotCollections;\n                var start = this._startSlot(startTime, collections);\n                var firstIndex, lastIndex;\n\n                if (!start.inRange && startTime >= start.slot.end) {\n                    firstIndex = start.slot.collectionIndex + 1;\n                    start = null;\n                }\n\n                var end = start;\n\n                if (startTime < endTime) {\n                    end = this._endSlot(endTime, collections);\n                }\n\n                if (end && !end.inRange && endTime <= end.slot.start) {\n                    lastIndex = end.slot.collectionIndex;\n\n                    if (endTime === end.slot.start && ((start && lastIndex > start.slot.collectionIndex) || (lastIndex > firstIndex))) {\n                        lastIndex -= 1;\n                    }\n\n                    end = null;\n                }\n\n                if (start === null && end === null) {\n                    if (endTime - startTime < kendo.date.MS_PER_DAY) {\n                        return [];\n                    } else {\n                        start = {\n                            inRange: true,\n                            slot: collections[firstIndex].first()\n                        };\n\n                        end = {\n                            inRange: true,\n                            slot: collections[lastIndex].last()\n                        };\n                    }\n                }\n\n                if (start === null) {\n                    if (end.slot.end <= startTime) {\n                        return [];\n                    }\n\n                    start = {\n                        inRange: true,\n                        slot: (collections[firstIndex] || collections[end.slot.collectionIndex]).first()\n                    };\n                }\n\n                if (end === null) {\n                    if (start.slot.start >= endTime) {\n                        return [];\n                    }\n\n                    end = {\n                        inRange: true,\n                        slot: (collections[lastIndex] || collections[start.slot.collectionIndex]).last()\n                    };\n                }\n\n                return this._continuousRange(TimeSlotRange, collections, start, end);\n            },\n\n            daySlotRanges: function(startTime, endTime, isAllDay) {\n                var collections = this._daySlotCollections;\n\n                var start = this._startSlot(startTime, collections, isAllDay);\n\n                if (!start.inRange && startTime >= start.slot.end) {\n                    start = null;\n                }\n\n                var end = start;\n\n                if (startTime < endTime) {\n                    end = this._endSlot(endTime, collections, isAllDay);\n                }\n\n                if (end && !end.inRange && endTime <= end.slot.start) {\n                    end = null;\n                }\n\n                if (start === null && end === null) {\n                    return [];\n                }\n\n                if (start === null) {\n                    if (end.slot.end <= startTime) {\n                        return [];\n                    }\n\n                    do {\n                        startTime += kendo.date.MS_PER_DAY;\n                        start = this._startSlot(startTime, collections, isAllDay);\n                    } while (!start.inRange && startTime >= start.slot.end);\n                }\n\n                if (end === null) {\n                    if (start.slot.start >= endTime) {\n                        return [];\n                    }\n\n                    do {\n                        endTime -= kendo.date.MS_PER_DAY;\n                        end = this._endSlot(endTime, collections, isAllDay);\n                    } while (!end.inRange && endTime <= end.slot.start);\n                }\n\n                return this._continuousRange(DaySlotRange, collections, start, end);\n            },\n\n            _continuousRange: function(range, collections, start, end) {\n                var startSlot = start.slot;\n                var endSlot = end.slot;\n\n                var startIndex = startSlot.collectionIndex;\n                var endIndex = endSlot.collectionIndex;\n\n                var ranges = [];\n\n                for (var collectionIndex = startIndex; collectionIndex <= endIndex; collectionIndex++) {\n                    var collection = collections[collectionIndex];\n\n                    var first = collection.first();\n                    var last = collection.last();\n                    var head = false;\n                    var tail = false;\n\n                    if (collectionIndex == startIndex) {\n                        tail = !start.inRange;\n                    }\n\n                    if (collectionIndex == endIndex) {\n                        head = !end.inRange;\n                    }\n\n                    if (first.start < startSlot.start) {\n                        first = startSlot;\n                    }\n\n                    if (last.start > endSlot.start) {\n                        last = endSlot;\n                    }\n\n                    if (startIndex < endIndex) {\n                        if (collectionIndex == startIndex) {\n                            head = true;\n                        } else if (collectionIndex == endIndex) {\n                            tail = true;\n                        } else {\n                            head = tail = true;\n                        }\n                    }\n\n                    ranges.push(new range({\n                        start: first,\n                        end: last,\n                        collection: collection,\n                        head: head,\n                        tail: tail\n                    }));\n                }\n\n                return ranges;\n            },\n\n            slotRanges: function(event, isDay) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n                if (isDay === undefined) {\n                    if (this._enforceAllDaySlot) {\n                        isDay = event.isMultiDay();\n                    } else {\n                        isDay = event.isAllDay;\n                    }\n                }\n\n                if (isDay) {\n                    return this.daySlotRanges(startTime, endTime, event.isAllDay);\n                }\n\n                return this.timeSlotRanges(startTime, endTime);\n            },\n\n            ranges: function(startTime, endTime, isDay, isAllDay) {\n                if (typeof startTime != \"number\") {\n                    startTime = kendo.date.toUtcTime(startTime);\n                }\n\n                if (typeof endTime != \"number\") {\n                    endTime = kendo.date.toUtcTime(endTime);\n                }\n\n                if (isDay) {\n                    return this.daySlotRanges(startTime, endTime, isAllDay);\n                }\n\n                return this.timeSlotRanges(startTime, endTime);\n            },\n\n            _startCollection: function(date, collections) {\n                for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                    var collection = collections[collectionIndex];\n\n                    if (collection.startInRange(date)) {\n                        return collection;\n                    }\n                }\n\n                return null;\n            },\n\n            _endCollection: function(date, collections, isAllDay) {\n                for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                    var collection = collections[collectionIndex];\n\n                    if (collection.endInRange(date, isAllDay)) {\n                        return collection;\n                    }\n                }\n\n                return null;\n            },\n\n            _getCollections: function(isDay) {\n                return isDay ? this._daySlotCollections : this._timeSlotCollections;\n            },\n\n            continuousSlot: function(slot, reverse) {\n                var pad = reverse ? -1 : 1;\n                var collections = this._getCollections(slot.isDaySlot);\n                var collection = collections[slot.collectionIndex + pad];\n\n                return collection ? collection[reverse ? \"last\" : \"first\"]() : undefined;\n            },\n\n            firstSlot: function() {\n                var collections = this._getCollections(this.daySlotCollectionCount());\n\n                return collections[0].first();\n            },\n\n            lastSlot: function() {\n                var collections = this._getCollections(this.daySlotCollectionCount());\n\n                return collections[collections.length - 1].last();\n            },\n\n            upSlot: function(slot, keepCollection, groupByDateVertically) {\n                var that = this;\n                var moveToDaySlot = function(isDaySlot, collectionIndex, index) {\n                    var isFirstCell = index === 0;\n\n                    if (!keepCollection && !isDaySlot && isFirstCell && that.daySlotCollectionCount()) {\n                        return that._daySlotCollections[0].at(collectionIndex);\n                    }\n                };\n\n                if (!this.timeSlotCollectionCount()) {\n                    keepCollection = true;\n                }\n\n                return this._verticalSlot(slot, -1, moveToDaySlot, groupByDateVertically);\n            },\n\n            downSlot: function(slot, keepCollection, groupByDateVertically) {\n                var that = this;\n                var moveToTimeSlot = function(isDaySlot, collectionIndex, index) {\n                    if (!keepCollection && isDaySlot && that.timeSlotCollectionCount()) {\n                        return that._timeSlotCollections[index].at(0);\n                    }\n                };\n\n                if (!this.timeSlotCollectionCount()) {\n                    keepCollection = true;\n                }\n\n                return this._verticalSlot(slot, 1, moveToTimeSlot, groupByDateVertically);\n            },\n\n            leftSlot: function(slot, groupByDateVertically) {\n                return this._horizontalSlot(slot, -1, groupByDateVertically);\n            },\n\n            rightSlot: function(slot, groupByDateVertically) {\n                return this._horizontalSlot(slot, 1, groupByDateVertically);\n            },\n\n            _horizontalSlot: function(slot, step, groupByDateVertically) {\n                var index = slot.index;\n                var isDaySlot = slot.isDaySlot;\n                var collectionIndex = slot.collectionIndex;\n                var collections = this._getCollections(isDaySlot);\n\n                isDaySlot = groupByDateVertically ? false : isDaySlot;\n\n                if (isDaySlot) {\n                    index += step;\n                } else {\n                    collectionIndex += step;\n                }\n\n                var collection = collections[collectionIndex];\n\n                return collection ? collection.at(index) : undefined;\n            },\n\n            _verticalSlot: function(slot, step, swapCollection, groupByDateVertically) {\n                var index = slot.index;\n                var isDaySlot = slot.isDaySlot;\n                var collectionIndex = slot.collectionIndex;\n                var collections = this._getCollections(isDaySlot);\n\n                slot = swapCollection(isDaySlot, collectionIndex, index);\n                if (slot) {\n                    return slot;\n                }\n\n                isDaySlot = groupByDateVertically ? false : isDaySlot;\n\n                if (isDaySlot) {\n                    collectionIndex += step;\n                } else {\n                    index += step;\n                }\n\n                var collection = collections[collectionIndex];\n\n                return collection ? collection.at(index) : undefined;\n            },\n\n            _collection: function(index, multiday) {\n                var collections = multiday ? this._daySlotCollections : this._timeSlotCollections;\n\n                return collections[index];\n            },\n\n            _startSlot: function(time, collections, isAllDay) {\n                var collection = this._startCollection(time, collections);\n                var inRange = true;\n                var index = 0;\n\n                if (!collection) {\n                    collection = collections[index];\n\n                    while (index < collections.length - 1 && collection._start < time) {\n                        index++;\n                        collection = collections[index];\n                    }\n\n                    inRange = false;\n                }\n\n                var slot = collection.slotByStartDate(time, isAllDay);\n\n                if (!slot) {\n                    slot = collection.first();\n                    inRange = false;\n                }\n\n                return {\n                    slot: slot,\n                    inRange: inRange\n                };\n            },\n\n            _endSlot: function(time, collections, isAllDay) {\n                var collection = this._endCollection(time, collections, isAllDay);\n                var inRange = true;\n                var index = collections.length - 1;\n\n                if (!collection) {\n                    collection = collections[index];\n\n                    while (index > 0 && collection._start > time) {\n                        index--;\n                        collection = collections[index];\n                    }\n\n                    inRange = false;\n                }\n\n                var slot = collection.slotByEndDate(time, isAllDay);\n\n                if (!slot) {\n                    if (time <= collection.first().start) {\n                        slot = collection.first();\n                    } else {\n                        slot = collection.last();\n                    }\n\n                    inRange = false;\n                }\n\n                return {\n                    slot: slot,\n                    inRange: inRange\n                };\n            },\n\n            getSlotCollection: function(index, isDay) {\n                return this[isDay ? \"getDaySlotCollection\" : \"getTimeSlotCollection\"](index);\n            },\n\n            getTimeSlotCollection: function(index) {\n                return this._timeSlotCollections[index];\n            },\n\n            getDaySlotCollection: function(index) {\n                return this._daySlotCollections[index];\n            }\n        });\n\n        var SlotRange = kendo.Class.extend({\n            init: function(options) {\n                $.extend(this, options);\n            },\n\n            innerHeight: function() {\n                var collection = this.collection;\n\n                var startIndex = this.start.index;\n\n                var endIndex = this.end.index;\n\n                var result = 0;\n\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                   result += collection.at(slotIndex).offsetHeight;\n                }\n\n                return result;\n            },\n\n            events: function() {\n                return this.collection.events();\n            },\n\n            addEvent: function(event) {\n                this.events().push(event);\n            },\n\n            startSlot: function() {\n                if (this.start.offsetLeft > this.end.offsetLeft) {\n                    return this.end;\n                }\n                return this.start;\n            },\n\n            endSlot: function() {\n                if (this.start.offsetLeft > this.end.offsetLeft) {\n                    return this.start;\n                }\n                return this.end;\n            }\n        });\n\n        var TimeSlotRange = SlotRange.extend({\n            innerHeight: function() {\n                var collection = this.collection;\n\n                var startIndex = this.start.index;\n\n                var endIndex = this.end.index;\n\n                var result = 0;\n\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                   result += collection.at(slotIndex).offsetHeight;\n                }\n\n                return result;\n            },\n\n            outerRect: function(start, end, snap) {\n                return this._rect(\"offset\", start, end, snap);\n            },\n\n            _rect: function(property, start, end, snap) {\n                var top;\n                var bottom;\n                var left;\n                var right;\n                var startSlot = this.start;\n                var endSlot = this.end;\n                var isRtl = kendo.support.isRtl(startSlot.element);\n\n                if (typeof start != \"number\") {\n                    start = kendo.date.toUtcTime(start);\n                }\n\n                if (typeof end != \"number\") {\n                    end = kendo.date.toUtcTime(end);\n                }\n\n                if (snap) {\n                    top = startSlot.offsetTop;\n                    bottom = endSlot.offsetTop + endSlot[property + \"Height\"];\n                    if (isRtl) {\n                        left = endSlot.offsetLeft;\n                        right = startSlot.offsetLeft + startSlot[property + \"Width\"];\n                    } else {\n                        left = startSlot.offsetLeft;\n                        right = endSlot.offsetLeft + endSlot[property + \"Width\"];\n                    }\n                } else {\n                    var startOffset = start - startSlot.start;\n\n                    if (startOffset < 0) {\n                        startOffset = 0;\n                    }\n\n                    var startSlotDuration = startSlot.end - startSlot.start;\n\n                    top = startSlot.offsetTop + startSlot[property + \"Height\"] * startOffset / startSlotDuration;\n\n                    var endOffset = endSlot.end - end;\n\n                    if (endOffset < 0) {\n                        endOffset = 0;\n                    }\n\n                    var endSlotDuration = endSlot.end - endSlot.start;\n\n                    bottom = endSlot.offsetTop + endSlot[property + \"Height\"] - endSlot[property + \"Height\"] * endOffset / endSlotDuration;\n\n                    if (isRtl) {\n                        left = Math.round(endSlot.offsetLeft + endSlot[property + \"Width\"] * endOffset / endSlotDuration);\n                        right = Math.round(startSlot.offsetLeft + startSlot[property + \"Width\"] - startSlot[property + \"Width\"] * startOffset / startSlotDuration);\n                    } else {\n                        left = Math.round(startSlot.offsetLeft + startSlot[property + \"Width\"] * startOffset / startSlotDuration);\n                        right = Math.round(endSlot.offsetLeft + endSlot[property + \"Width\"] - endSlot[property + \"Width\"] * endOffset / endSlotDuration);\n                    }\n                }\n\n                return {\n                    top: top,\n                    bottom: bottom,\n                    //first column has no left border\n                    left: left === 0 ? left : left + 1,\n                    right: right\n                };\n            },\n\n            innerRect: function(start, end, snap) {\n                return this._rect(\"client\", start, end, snap);\n            }\n        });\n\n        var DaySlotRange = SlotRange.extend({\n            innerWidth: function() {\n                var collection = this.collection;\n\n                var startIndex = this.start.index;\n\n                var endIndex = this.end.index;\n\n                var result = 0;\n\n                var width = startIndex !== endIndex ? \"offsetWidth\" : \"clientWidth\";\n\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                   result += collection.at(slotIndex)[width];\n                }\n\n                return result;\n            }\n        });\n\n        var SlotCollection = kendo.Class.extend({\n            init: function(startDate, endDate, groupIndex, collectionIndex) {\n                this._slots = [];\n\n                this._events = [];\n\n                this._start = kendo.date.toUtcTime(startDate);\n\n                this._end = kendo.date.toUtcTime(endDate);\n\n                this._groupIndex = groupIndex;\n\n                this._collectionIndex = collectionIndex;\n            },\n            refresh: function() {\n                for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                    this._slots[slotIndex].refresh();\n                }\n            },\n\n            startInRange: function(date) {\n                return this._start <= date && date < this._end;\n            },\n\n            endInRange: function(date, isAllDay) {\n                var end = isAllDay ? date < this._end : date <= this._end;\n                return this._start <= date && end;\n            },\n\n            slotByStartDate: function(date) {\n                var time = date;\n\n                if (typeof time != \"number\") {\n                    time = kendo.date.toUtcTime(date);\n                }\n\n                for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                    var slot = this._slots[slotIndex];\n\n                    if (slot.startInRange(time)) {\n                        return slot;\n                    }\n                }\n\n                return null;\n            },\n\n            slotByEndDate: function(date, allday) {\n                var time = date;\n\n                if (typeof time != \"number\") {\n                    time = kendo.date.toUtcTime(date);\n                }\n\n                if (allday) {\n                    return this.slotByStartDate(date, false);\n                }\n\n                for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                    var slot = this._slots[slotIndex];\n\n                    if (slot.endInRange(time)) {\n                        return slot;\n                    }\n                }\n\n                return null;\n            },\n\n            count: function() {\n                return this._slots.length;\n            },\n            events: function() {\n                return this._events;\n            },\n            addTimeSlot: function(element, start, end, isHorizontal) {\n                var slot = new TimeSlot(element, start, end, this._groupIndex, this._collectionIndex, this._slots.length, isHorizontal);\n\n                this._slots.push(slot);\n            },\n            addDaySlot: function(element, start, end, eventCount) {\n                var slot = new DaySlot(element, start, end, this._groupIndex, this._collectionIndex, this._slots.length, eventCount);\n\n                this._slots.push(slot);\n            },\n            first: function() {\n                return this._slots[0];\n            },\n            last: function() {\n                return this._slots[this._slots.length - 1];\n            },\n            at: function(index) {\n                return this._slots[index];\n            }\n        });\n\n        var Slot = kendo.Class.extend({\n            init: function(element, start, end, groupIndex, collectionIndex, index) {\n                this.element = element;\n                this.clientWidth = element.clientWidth;\n                this.clientHeight = element.clientHeight;\n                this.offsetWidth = element.offsetWidth;\n                this.offsetHeight = element.offsetHeight;\n                this.offsetTop = element.offsetTop;\n                this.offsetLeft = element.offsetLeft;\n\n                this.start = start;\n                this.end = end;\n                this.element = element;\n                this.groupIndex = groupIndex;\n                this.collectionIndex = collectionIndex;\n                this.index = index;\n                this.isDaySlot = false;\n            },\n\n            refresh: function() {\n                var element = this.element;\n\n                this.clientWidth = element.clientWidth;\n                this.clientHeight = element.clientHeight;\n                this.offsetWidth = element.offsetWidth;\n                this.offsetHeight = element.offsetHeight;\n                this.offsetTop = element.offsetTop;\n                this.offsetLeft = element.offsetLeft;\n            },\n\n            startDate: function() {\n                return kendo.timezone.toLocalDate(this.start);\n            },\n\n            endDate: function() {\n                return kendo.timezone.toLocalDate(this.end);\n            },\n\n            startInRange: function(date) {\n                return this.start <= date && date < this.end;\n            },\n\n            endInRange: function(date) {\n                return this.start < date && date <= this.end;\n            },\n\n            startOffset: function() {\n               return this.start;\n            },\n\n            endOffset: function() {\n                return this.end;\n            }\n        });\n\n        var TimeSlot = Slot.extend({\n            init: function(element, start, end, groupIndex, collectionIndex, index, isHorizontal) {\n                Slot.fn.init.apply(this, arguments);\n\n                this.isHorizontal = isHorizontal ? true : false;\n            },\n\n            offsetX: function(rtl, offset) {\n                if (rtl) {\n                    return this.offsetLeft + offset;\n                } else {\n                    return this.offsetLeft + offset;\n                }\n            },\n\n            startInRange: function(date) {\n                return this.start <= date && date < this.end;\n            },\n\n            endInRange: function(date) {\n                return this.start < date && date <= this.end;\n            },\n\n            startOffset: function(x, y, snap) {\n                if (snap) {\n                    return this.start;\n                }\n\n                var offset = $(this.element).offset();\n\n                var duration = this.end - this.start;\n                var difference;\n                var time;\n\n                if (this.isHorizontal) {\n                    //need update\n                    var isRtl = kendo.support.isRtl(this.element);\n                    difference = x - offset.left;\n                    time = Math.floor(duration * ( difference / this.offsetWidth));\n\n                    if (isRtl) {\n                        return this.start + duration - time;\n                    }\n                } else {\n                    difference = y - offset.top;\n                    time = Math.floor(duration * ( difference / this.offsetHeight));\n                }\n\n                return this.start + time;\n            },\n\n            endOffset: function(x, y, snap) {\n                if (snap) {\n                    return this.end;\n                }\n\n                var offset = $(this.element).offset();\n\n                var duration = this.end - this.start;\n                var difference;\n                var time;\n\n                if (this.isHorizontal) {\n                    //need update\n                    var isRtl = kendo.support.isRtl(this.element);\n                    difference = x - offset.left;\n                    time = Math.floor(duration * ( difference / this.offsetWidth));\n\n                    if (isRtl) {\n                        return this.start + duration - time;\n                    }\n                } else {\n                    difference = y - offset.top;\n                    time = Math.floor(duration * ( difference / this.offsetHeight));\n                }\n\n                return this.start + time;\n            }\n        });\n\n        var DaySlot = Slot.extend({\n            init: function(element, start, end, groupIndex, collectionIndex, index, eventCount) {\n                Slot.fn.init.apply(this, arguments);\n\n                this.eventCount = eventCount;\n                this.isDaySlot = true;\n\n                if (this.element.children.length) {\n                    var firstChild = this.element.children[0];\n\n                    this.firstChildHeight = firstChild.offsetHeight;\n                    this.firstChildTop = firstChild.offsetTop;\n                } else {\n                    this.firstChildHeight = 3;\n                    this.firstChildTop = 0;\n                }\n            },\n\n            startDate: function() {\n                var date = new Date(this.start);\n\n                return kendo.timezone.apply(date, \"Etc/UTC\");\n            },\n\n            endDate: function() {\n                var date = new Date(this.end);\n\n                return kendo.timezone.apply(date, \"Etc/UTC\");\n            },\n\n            startInRange: function(date) {\n                return this.start <= date && date < this.end;\n            },\n\n            endInRange: function(date) {\n                return this.start < date && date <= this.end;\n            }\n        });\n\n        var scrollbarWidth;\n        function scrollbar() {\n            scrollbarWidth = scrollbarWidth ? scrollbarWidth : kendo.support.scrollbar();\n            return scrollbarWidth;\n        }\n\n        kendo.ui.SchedulerView = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, $.extend({}, this.options, options));\n\n                this._normalizeOptions();\n                this._initDefaultTools();\n                this._scrollbar = scrollbar();\n                this._isRtl = kendo.support.isRtl(element);\n                this._resizeHint = $();\n                this._moveHint = $();\n                this._cellId = kendo.guid();\n                this._resourcesForGroups();\n                this._selectedSlots = [];\n                this.element.attr(\"role\", \"application\");\n            },\n\n            options: {\n                messages: {\n                    ariaEventLabel: {\n                        on: \"on\",\n                        at: \"at\",\n                        to: \"to\",\n                        allDay: \"(all day)\",\n                        prefix: \"\"\n                    }\n                }\n            },\n\n            visibleEndDate: function() {\n                return this.endDate();\n            },\n\n            _initDefaultTools: function() {\n                this._defaultTools = {\n                    todayMobile: {\n                        type: \"button\",\n                        fillMode: \"flat\",\n                        text: this.options.messages.today,\n                        click: this._footerTodayClickHandler.bind(this),\n                        attributes: {\n                            class: \"k-scheduler-today\"\n                        }\n                    },\n                    fulldayDesktop: {\n                        type: \"button\",\n                        icon: \"clock\",\n                        text: this.options.showWorkHours ? this.options.messages.showFullDay : this.options.messages.showWorkDay,\n                        click: this.toggleFullDay ? this.toggleFullDay.bind(this) : $.noop,\n                        attributes: {\n                            class: \"k-scheduler-fullday\"\n                        }\n                    },\n                    fulldayMobile: {\n                        type: \"button\",\n                        fillMode: \"flat\",\n                        text: this.options.showWorkHours ? this.options.messages.showFullDay : this.options.messages.showWorkDay,\n                        click: this.toggleFullDay ? this.toggleFullDay.bind(this) : $.noop,\n                        attributes: {\n                            class: \"k-scheduler-fullday\"\n                        }\n                    }\n                };\n            },\n\n            _normalizeOptions: function() {\n                var options = this.options;\n\n                if (options.startTime) {\n                    options.startTime.setMilliseconds(0);\n                }\n\n                if (options.endTime) {\n                    options.endTime.setMilliseconds(0);\n                }\n\n                if (options.workDayStart) {\n                    options.workDayStart.setMilliseconds(0);\n                }\n\n                if (options.workDayEnd) {\n                    options.workDayEnd.setMilliseconds(0);\n                }\n            },\n\n            _isMobile: function() {\n                var options = this.options;\n                return (options.mobile === true && kendo.support.mobileOS) || options.mobile === \"phone\" || options.mobile === \"tablet\";\n            },\n\n            _addResourceView: function() {\n                var resourceView = new ResourceView(this.groups.length, this._isRtl, this.options.enforceAllDaySlot);\n\n                this.groups.push(resourceView);\n\n                return resourceView;\n            },\n\n            dateForTitle: function() {\n                return kendo.format(this.options.selectedDateFormat, this.startDate(), this.endDate());\n            },\n\n            shortDateForTitle: function() {\n                return kendo.format(this.options.selectedShortDateFormat, this.startDate(), this.endDate());\n            },\n\n            mobileDateForTitle: function() {\n                return kendo.format(this.options.selectedMobileDateFormat || this.options.selectedShortDateFormat, this.startDate(), this.endDate());\n            },\n\n            _changeGroup: function(selection, previous) {\n                var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n                var slot = this[method](selection.start, selection.groupIndex, selection.isAllDay);\n\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n\n                if (this._isGroupedByDate() && !slot) {\n                   selection.groupIndex = previous ? this.groups.length - 1 : 0;\n                }\n\n                return slot;\n            },\n\n            _changeDate: function(selection, slot, previous) {\n                var group = this.groups[selection.groupIndex];\n                var collections, index;\n\n                if (previous) {\n                      collections = group._getCollections(false);\n                      index = group.daySlotCollectionCount() ? slot.index - 1 : slot.collectionIndex - 1;\n\n                      if (index >= 0) {\n                          return collections[index]._slots[collections[index]._slots.length - 1];\n                      }\n                  } else {\n                      collections = group._getCollections(group.daySlotCollectionCount());\n                      index = group.daySlotCollectionCount() ? 0 : slot.collectionIndex + 1;\n                      var slotIndex = group.daySlotCollectionCount() ? slot.collectionIndex + 1 : 0;\n\n                      if (collections[index] && collections[index]._slots[slotIndex]) {\n                          return collections[index]._slots[slotIndex];\n                      }\n                   }\n            },\n\n            _changeGroupContinuously: function() {\n                return null;\n            },\n\n            _changeViewPeriod: function() {\n                return false;\n            },\n\n            _isInRange: function(newStart, newEnd) {\n                if (!newStart || !newEnd || !this.options.min || !this.options.max) {\n                    return false;\n                }\n                return getDate(newStart) <= getDate(this.options.min) || getDate(newEnd) >= getDate(this.options.max);\n            },\n\n            _horizontalSlots: function(selection, ranges, multiple, reverse) {\n                var method = reverse ? \"leftSlot\" : \"rightSlot\";\n                var horizontalRange = {\n                     startSlot: ranges[0].start,\n                     endSlot: ranges[ranges.length - 1].end\n                 };\n                var group = this.groups[selection.groupIndex];\n                var isVertical = this._isVerticallyGrouped();\n\n                if (!multiple) {\n                    var slot = this._normalizeHorizontalSelection(selection, ranges, reverse);\n                    if (slot) {\n                        horizontalRange.startSlot = horizontalRange.endSlot = slot;\n                    }\n                }\n\n                if (this._isGroupedByDate() && !multiple) {\n                      var tempSlot = this._changeGroup(selection, reverse);\n\n                      if (!tempSlot)\n                      {\n                        horizontalRange = this._getNextHorizontalRange(group, method, horizontalRange);\n                      } else {\n                          horizontalRange.startSlot = horizontalRange.endSlot = tempSlot;\n                      }\n                } else {\n                      horizontalRange.startSlot = group[method](horizontalRange.startSlot);\n                      horizontalRange.endSlot = group[method](horizontalRange.endSlot);\n\n                      if (!multiple && !isVertical && (!horizontalRange.startSlot || !horizontalRange.endSlot)) {\n                            horizontalRange.startSlot = horizontalRange.endSlot = this._changeGroup(selection, reverse);\n                      }\n                }\n\n                var continuousSlot;\n\n                if ((!horizontalRange.startSlot || !horizontalRange.endSlot) && !this._isGroupedByDate()) {\n                    continuousSlot = this._continuousSlot(selection, ranges, reverse);\n                    continuousSlot = this._changeGroupContinuously(selection, continuousSlot, multiple, reverse);\n\n                    if (continuousSlot) {\n                        horizontalRange.startSlot = horizontalRange.endSlot = continuousSlot;\n                    }\n                }\n\n                return horizontalRange;\n            },\n\n             _getNextHorizontalRange: function(group, method, horizontalRange) {\n                if (!this._isVerticallyGrouped()) {\n                    horizontalRange.startSlot = group[method](horizontalRange.startSlot);\n                    horizontalRange.endSlot = group[method](horizontalRange.endSlot);\n                }\n\n                 return horizontalRange;\n            },\n\n            _verticalSlots: function(selection, ranges, multiple, reverse) {\n                var group = this.groups[selection.groupIndex];\n                var slot;\n                var verticalRange = {\n                    startSlot: ranges[0].start,\n                    endSlot: ranges[ranges.length - 1].end\n                };\n\n                if (!multiple) {\n                    slot = this._normalizeVerticalSelection(selection, ranges, reverse);\n                    if (slot) {\n                        verticalRange.startSlot = verticalRange.endSlot = slot;\n                    }\n                }\n\n                var method = reverse ? \"upSlot\" : \"downSlot\";\n\n                verticalRange = this._getNextVerticalRange(group, method, verticalRange, multiple);\n\n                if (!multiple && this._isVerticallyGrouped() && (!verticalRange.startSlot || !verticalRange.endSlot)) {\n                    if (this._isGroupedByDate()) {\n                        verticalRange.startSlot = verticalRange.endSlot = this._changeDate(selection, slot, reverse);\n\n                   } else {\n                        verticalRange.startSlot = verticalRange.endSlot = this._changeGroup(selection, reverse);\n                   }\n                }\n\n                return verticalRange;\n            },\n\n            _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n                 verticalRange.startSlot = group[method](verticalRange.startSlot, multiple);\n                 verticalRange.endSlot = group[method](verticalRange.endSlot, multiple);\n\n                 return verticalRange;\n            },\n\n            _normalizeHorizontalSelection: function() {\n                return null;\n            },\n\n            _normalizeVerticalSelection: function(selection, ranges, reverse) {\n                var slot;\n\n                if (reverse) {\n                    slot = ranges[0].start;\n                } else {\n                    slot = ranges[ranges.length - 1].end;\n                }\n\n                return slot;\n            },\n\n            _continuousSlot: function() {\n                return null;\n            },\n\n            _footerTodayClickHandler: function(e) {\n                e.preventDefault();\n\n                var that = this;\n                var options = that.options;\n                var timezone = that.options.timezone;\n                var action = \"today\";\n                var currentDate = new Date();\n                var date;\n\n                if (timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                    date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                } else {\n                    date = currentDate;\n                }\n\n                that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n            },\n\n            _footerItems: function() {\n                var that = this,\n                    items = [],\n                    options = this.options;\n\n                if (that._isMobile()) {\n                    items.push({\n                        type: \"button\",\n                        fillMode: \"flat\",\n                        text: options.messages.today,\n                        click: that._footerTodayClickHandler.bind(that),\n                        attributes: {\n                            class: \"k-scheduler-today\"\n                        }\n                    });\n                }\n\n                return items;\n            },\n\n            _footer: function() {\n                if (this.options.footer === false) {\n                    return;\n                }\n\n                var that = this,\n                    items = that._footerItems();\n\n                if (items.length > 0) {\n                    var html = $('<div class=\"k-scheduler-footer\">');\n\n                    that.footer = html.appendTo(that.element);\n\n                    that.footer.kendoToolBar({\n                        resizable: false,\n                        items: items\n                    });\n                }\n            },\n\n            constrainSelection: function(selection) {\n                var group = this.groups[0];\n                var slot;\n\n                if (!this.inRange(selection)) {\n                   slot = group.firstSlot();\n\n                   selection.isAllDay = slot.isDaySlot;\n                   selection.start = slot.startDate();\n                   selection.end = slot.endDate();\n                } else {\n                    if (!group.daySlotCollectionCount()) {\n                        selection.isAllDay = false;\n                    } else if (!group.timeSlotCollectionCount()) {\n                        selection.isAllDay = true;\n                    }\n               }\n\n                if (!this.groups[selection.groupIndex]) {\n                    selection.groupIndex = 0;\n                }\n            },\n\n            move: function(selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n\n                if (!group.timeSlotCollectionCount()) {\n                    selection.isAllDay = true;\n                }\n\n                var ranges = group.ranges(selection.start, selection.end, selection.isAllDay, false);\n                var startSlot, endSlot, reverse, slots;\n\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n\n                    this._updateDirection(selection, ranges, shift, reverse, true);\n\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                    if (!slots.startSlot && !shift && this._changeViewPeriod(selection, reverse, !verticalByDate)) {\n                        return handled;\n                    }\n\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                    if (!slots.startSlot && !shift && this._changeViewPeriod(selection, reverse, verticalByDate)) {\n                        return handled;\n                    }\n                }\n\n                if (handled) {\n                    startSlot = slots.startSlot;\n                    endSlot = slots.endSlot;\n\n                    if (shift) {\n                        var backward = selection.backward;\n                        if (backward && startSlot) {\n                            selection.start = startSlot.startDate();\n                        } else if (!backward && endSlot) {\n                            selection.end = endSlot.endDate();\n                        }\n                    } else if (startSlot && endSlot) {\n                        selection.isAllDay = startSlot.isDaySlot;\n                        selection.start = startSlot.startDate();\n                        selection.end = endSlot.endDate();\n                    }\n\n                    selection.events = [];\n                }\n\n                return handled;\n            },\n\n            moveToEventInGroup: function(group, slot, selectedEvents, prev) {\n                var events = group._continuousEvents || [];\n                var found, event;\n                var pad = prev ? -1 : 1;\n                var length = events.length;\n                var idx = prev ? length - 1 : 0;\n                var i, lastSelected;\n\n                if (selectedEvents.length) {\n                    lastSelected = selectedEvents[selectedEvents.length - 1];\n\n                    if (prev) {\n                        for (i = 0; i < events.length; i++) {\n                            if (events[i].uid === lastSelected) {\n                                idx = i + pad;\n                            }\n                        }\n                    } else {\n                        for (i = events.length - 1; i > -1; i--) {\n                            if (events[i].uid === lastSelected) {\n                                idx = i + pad;\n                            }\n                        }\n                    }\n                }\n\n                while (idx < length && idx > -1) {\n                    event = events[idx];\n\n                    if ( (!prev && event.start.startDate() >= slot.startDate()) ||\n                        (prev && event.start.startDate() <= slot.startDate()) ) {\n\n                        if (event && $.inArray(event.uid, selectedEvents) === -1) {\n                            found = !!event;\n                            break;\n                        }\n                    }\n\n                    idx += pad;\n                }\n\n                return event;\n            },\n\n            moveToEvent: function(selection, prev) {\n                var groupIndex = selection.groupIndex;\n\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(selection.start, selection.end, this.name === \"month\" || selection.isAllDay, false)[0].start;\n\n                var length = this.groups.length;\n                var pad = prev ? -1 : 1;\n                var events = selection.events;\n                var event;\n\n                if (this._isGroupedByDate()) {\n                    var allEvents = this._getAllEvents();\n                    var uniqueAllEvents = this._getUniqueEvents(allEvents);\n                    var sortedEvents = this._getSortedEvents(uniqueAllEvents);\n\n                    if (events.length === 0) {\n                        var eventIndex = this._getNextEventIndexBySlot(slot, sortedEvents, groupIndex);\n\n                        if (prev) {\n                            eventIndex--;\n                        }\n\n                        event = sortedEvents[eventIndex];\n                    } else {\n                         var idx = this._getStartIdx(events, sortedEvents);\n\n                        while (idx < sortedEvents.length && idx > -1) {\n                            if (events.length > 0) {\n                                slot = this._getSelectedSlot(slot, sortedEvents, event, idx, pad, prev);\n                            }\n\n                            if (!slot) {\n                                break;\n                            }\n\n                            if ( (!prev && sortedEvents[idx].start.startDate() >= slot.startDate()) ||\n                                  (prev && sortedEvents[idx].start.startDate() <= slot.startDate())) {\n                                 if (events[0] != sortedEvents[idx].uid) {\n                                     event = sortedEvents[idx];\n                                      break;\n                                 }\n                            }\n                            idx += pad;\n                        }\n                    }\n                } else {\n                      while (groupIndex < length && groupIndex > -1) {\n                        event = this.moveToEventInGroup(group, slot, events, prev);\n\n                        groupIndex += pad;\n                        group = this.groups[groupIndex];\n\n                        if (!group || event) {\n                            break;\n                        }\n\n                        events = [];\n                        if (prev) {\n                            slot = group.lastSlot();\n                        } else {\n                            slot = group.firstSlot(true);\n                        }\n                    }\n                }\n\n                if (event) {\n                    selection.events = [ event.uid ];\n                    selection.start = event.start.startDate();\n                    selection.end = event.end.endDate();\n                    selection.isAllDay = event.start.isDaySlot;\n                    selection.groupIndex = event.start.groupIndex;\n                    selection.eventElement = event.element[0];\n                }\n\n                return !!event;\n            },\n\n            current: function(candidate) {\n                if (candidate !== undefined) {\n                    this._current = candidate;\n                    if (this.content.has(candidate)) {\n                        this._scrollTo(candidate, this.content[0]);\n                    }\n                } else {\n                    return this._current;\n                }\n            },\n\n            select: function(selection) {\n                this.clearSelection();\n\n                if (!this._selectEvents(selection)) {\n                    this._selectSlots(selection);\n                }\n            },\n\n            _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n                var tempIndex = 0;\n                var slotStartDate = kendo.date.getDate(slot.startDate());\n\n                for (var i = 0; i < sortedEvents.length; i++) {\n                    var eventStartDate = kendo.date.getDate(sortedEvents[i].start.startDate());\n                    if (slotStartDate > eventStartDate) {\n                        tempIndex++;\n                        continue;\n                    }\n\n                    if (slotStartDate.getTime() === eventStartDate.getTime() && groupIndex > sortedEvents[i].start.groupIndex) {\n                          tempIndex++;\n                          continue;\n                    }\n\n                    if (slotStartDate.getTime() === eventStartDate.getTime() &&\n                        groupIndex >= sortedEvents[i].start.groupIndex &&\n                        slot.startDate() > sortedEvents[i].start.startDate()) {\n                        tempIndex++;\n                        continue;\n                     }\n\n                     break;\n                }\n                return tempIndex;\n            },\n\n            _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n                  if (sortedEvents[idx + pad] &&\n                   sortedEvents[idx].start.groupIndex !== sortedEvents[idx + pad].start.groupIndex) {\n                        var groupIndex = sortedEvents[idx + pad].start.groupIndex;\n                        var group = this.groups[groupIndex];\n\n                        if (!group || event) {\n                           slot = null;\n                        }\n\n                        if (prev) {\n                            slot = group.lastSlot();\n                        } else {\n                            slot = group.firstSlot(true);\n                        }\n                    }\n                 return slot;\n            },\n\n            _getStartIdx: function(events, sortedEvents) {\n                var selectedEventIndex = 0;\n\n                $.each(sortedEvents, function() {\n                    if (this.uid === events[0]) {\n                         return false;\n                    }\n\n                    selectedEventIndex++;\n                });\n\n                return selectedEventIndex;\n            },\n\n            _getAllEvents: function() {\n                var allEvents = [];\n                var groups = this.groups;\n\n                for (var idx = 0; idx < groups.length; idx++) {\n                    if (groups[idx]._continuousEvents) {\n                        allEvents = allEvents.concat(groups[idx]._continuousEvents);\n                    }\n                }\n\n                return allEvents;\n            },\n\n            _getUniqueEvents: function(allEvents) {\n                var uniqueAllEvents = [];\n\n                for (var i = 0; i < allEvents.length; i++) {\n                    var exists = false;\n                    for (var j = 0; j < uniqueAllEvents.length; j++) {\n                        if (allEvents[i].uid === uniqueAllEvents[j].uid) {\n                            exists = true;\n                            break;\n                        }\n                    }\n\n                    if (!exists) {\n                        uniqueAllEvents.push(allEvents[i]);\n                    }\n                }\n\n                return uniqueAllEvents;\n            },\n\n            _getSortedEvents: function(uniqueAllEvents) {\n                 return uniqueAllEvents.sort(function(first, second) {\n                    var firstStartDate = first.start.startDate();\n                    var secondStartDate = second.start.startDate();\n                    var result = kendo.date.getDate(firstStartDate) - kendo.date.getDate(secondStartDate);\n\n                    if (result === 0) {\n                        result = first.start.groupIndex - second.start.groupIndex;\n                    }\n\n                    if (result === 0) {\n                        result = firstStartDate.getTime() - secondStartDate.getTime();\n                    }\n\n                    if (result === 0) {\n                        if (first.start.isDaySlot && !second.start.isDaySlot) {\n                                result = -1;\n                        }\n\n                        if (!first.start.isDaySlot && second.start.isDaySlot) {\n                                result = 1;\n                        }\n                    }\n\n                    if (result === 0) {\n                        result = $(first.element).index() - $(second.element).index();\n                    }\n\n                    return result;\n                });\n            },\n\n            _selectSlots: function(selection) {\n                var isAllDay = selection.isAllDay;\n                var group = this.groups[selection.groupIndex];\n\n                if (!group.timeSlotCollectionCount()) {\n                    isAllDay = true;\n                }\n\n                this._selectedSlots = [];\n\n                var ranges = group.ranges(selection.start, selection.end, isAllDay, false);\n                var element;\n                var slot;\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var collection = range.collection;\n\n                    for (var slotIndex = range.start.index; slotIndex <= range.end.index; slotIndex++) {\n                        slot = collection.at(slotIndex);\n\n                        element = slot.element;\n                        addSelectedState(element);\n\n                        this._selectedSlots.push({\n                            start: slot.startDate(),\n                            end: slot.endDate(),\n                            element: element\n                        });\n                    }\n                }\n\n                if (selection.backward) {\n                    element = ranges[0].start.element;\n                }\n\n                this.current(element);\n            },\n\n            _selectEvents: function(selection) {\n                var found = false;\n                var events = selection.events;\n                var groupEvents = this._getAllEvents();\n                var idx, groupEvent, length = groupEvents.length;\n\n                if (!events[0] || !groupEvents[0]) {\n                    return found;\n                }\n\n                var result = $();\n                selection.events = [];\n                for (idx = 0; idx < length; idx ++) {\n                    if ($.inArray(groupEvents[idx].uid, events) > -1) {\n                        groupEvent = groupEvents[idx];\n                        result = result.add(groupEvent.element);\n                        if (selection.events.indexOf(groupEvent.uid) === -1) {\n                            selection.events.push(groupEvent.uid);\n                        }\n                    }\n                }\n\n                if (result[0]) {\n                    result.addClass(\"k-selected\");\n\n                    if (selection.eventElement) {\n                        this.current(selection.eventElement);\n                    } else {\n                        this.current(result.last()[0]);\n                    }\n\n                    this._selectedSlots = [];\n                    found = true;\n                }\n\n                return found;\n            },\n\n            inRange: function(options) {\n                var startDate = this.startDate();\n                var endDate = kendo.date.addDays(this.endDate(), 1);\n                var start = options.start;\n                var end = options.end;\n\n                return startDate <= start && start < endDate && startDate < end && end <= endDate;\n            },\n\n            _resourceValue: function(resource, item) {\n                if (resource.valuePrimitive) {\n                    item = kendo.getter(resource.dataValueField)(item);\n                }\n                return item;\n            },\n\n            _setResourceValue: function(groupLevelMember, resource, result) {\n                var value = groupLevelMember.value,\n                    setter;\n\n                if (resource.multiple) {\n                    value = [value];\n                }\n\n                setter = kendo.setter(resource.field);\n                setter(result, value);\n            },\n\n            _resourceBySlot: function(slot) {\n                var resources = this.groupedResources;\n                var result = {};\n\n                if (resources.length) {\n                    var resourceIndex = slot.groupIndex,\n                        groupOptions = this.options.group,\n                        nestedMember = groupOptions.date || groupOptions.orientation === \"horizontal\" ? \"columns\" : \"rows\",\n                        levels = nestedMember === \"rows\" ? this.rowLevels : this.columnLevels,\n                        dateGroupCompensation = groupOptions.date && groupOptions.orientation === \"horizontal\" ? 1 : 0,\n                        groupLevel = levels[resources.length - 1 + dateGroupCompensation],\n                        resource = resources[resources.length - 1],\n                        groupLevelMember = groupLevel[resourceIndex],\n                        passedChildren, numberOfChildren, j, i;\n\n                    this._setResourceValue(groupLevelMember, resource, result);\n\n                    for (j = resources.length - 2; j >= 0; j--) {\n                        groupLevel = levels[j + dateGroupCompensation];\n                        resource = resources[j];\n                        passedChildren = 0;\n\n                        for (i = 0; i < groupLevel.length; i++) {\n                            groupLevelMember = groupLevel[i];\n                            numberOfChildren = groupLevelMember[nestedMember].length;\n\n                            if (numberOfChildren > resourceIndex - passedChildren) {\n                                this._setResourceValue(groupLevelMember, resource, result);\n\n                                i = groupLevel.length;\n                            } else {\n                                passedChildren += numberOfChildren;\n                            }\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            _createResizeHint: function(left, top, width, height) {\n                return $(HINT).css({\n                    left: left,\n                    top: top,\n                    width: width,\n                    height: height\n                });\n            },\n\n            _removeResizeHint: function() {\n                this._resizeHint.remove();\n                this._resizeHint = $();\n            },\n\n            _removeMoveHint: function(uid) {\n                if (uid) {\n                    this._moveHint.filter(\"[data-uid='\" + uid + \"']\").remove();\n\n                    this._moveHint = this._moveHint.filter(\"[data-uid!='\" + uid + \"']\");\n                } else {\n                    this._moveHint.remove();\n                    this._moveHint = $();\n                }\n            },\n\n            _scrollTo: function(element, container) {\n                var elementOffset = element.offsetTop,\n                    elementOffsetDir = element.offsetHeight,\n                    containerScroll = container.scrollTop,\n                    containerOffsetDir = container.clientHeight,\n                    bottomDistance = elementOffset + elementOffsetDir,\n                    result = 0;\n\n                    if (containerScroll > elementOffset) {\n                        result = elementOffset;\n                    } else if (bottomDistance > (containerScroll + containerOffsetDir)) {\n                        if (elementOffsetDir <= containerOffsetDir) {\n                            result = (bottomDistance - containerOffsetDir);\n                        } else {\n                            result = elementOffset;\n                        }\n                    } else {\n                        result = containerScroll;\n                    }\n                    container.scrollTop = result;\n            },\n\n            _inverseEventColor: function(element) {\n                var eventColor = element.css(\"color\");\n                var eventColorIsDark = new Color(eventColor).isDark();\n                var eventBackground = element.css(\"background-color\");\n                var eventBackgroundIsDark = new Color(eventBackground).isDark();\n\n                if (eventColorIsDark == eventBackgroundIsDark) {\n                    element.addClass(INVERSE_COLOR_CLASS);\n                }\n            },\n\n            // Possibly legacy code. Ensure clients do not use it before removing. Or throw warning.\n            // CSP: leave it as it is (for now).\n           _eventTmpl: function(template, wrapper) {\n               var options = this.options,\n                   settings = $.extend({}, kendo.Template, options.templateSettings),\n                   paramName = settings.paramName,\n                   html = \"\",\n                   type = typeof template,\n                   state = { storage: {}, count: 0 };\n\n                if (type === \"function\") {\n                    state.storage[\"tmpl\" + state.count] = template;\n                    html += \"#=this.tmpl\" + state.count + \"(\" + paramName + \")#\";\n                    state.count ++;\n                } else if (type === \"string\") {\n                    html += template;\n                }\n\n                var tmpl = kendo.template(kendo.format(wrapper, html), settings);\n\n                if (state.count > 0) {\n                    tmpl = tmpl.bind(state.storage);\n                }\n\n                return tmpl;\n           },\n\n            eventResources: function(event) {\n                var resources = [],\n                    options = this.options;\n\n                if (!options.resources) {\n                    return resources;\n                }\n\n                for (var idx = 0; idx < options.resources.length; idx++) {\n                    var resource = options.resources[idx];\n                    var field = resource.field;\n                    var eventResources = kendo.getter(field)(event);\n\n                    if (eventResources == null) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        eventResources = [eventResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < eventResources.length; resourceIndex++) {\n                        var eventResource = null;\n\n                        var value = eventResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                eventResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (eventResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(eventResource);\n                            resources.push({\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(eventResource),\n                                value: value,\n                                color: resourceColor\n                            });\n                        }\n                    }\n                }\n                return resources;\n            },\n\n            createLayout: function(layout) {\n                var allDayIndex = -1;\n\n                if (!layout.rows) {\n                    layout.rows = [];\n                }\n\n                for (var idx = 0; idx < layout.rows.length; idx++) {\n                    if (layout.rows[idx].allDay) {\n                        allDayIndex = idx;\n                        break;\n                    }\n                }\n\n                var allDaySlot = layout.rows[allDayIndex];\n\n                if (allDayIndex >= 0) {\n                    layout.rows.splice(allDayIndex, 1);\n                }\n\n                var columnLevels = this.columnLevels = levels(layout, \"columns\");\n                var rowLevels = this.rowLevels = levels(layout, \"rows\");\n\n                if (this._isVirtualized()) {\n                    this._trimRowLevels(rowLevels);\n                }\n\n                this.table = $('<table role=\"presentation\" class=\"k-scheduler-layout k-scheduler-' + this.name + 'view\"><tbody></tbody></table>');\n\n                var rowCount = rowLevels[rowLevels.length - 1].length;\n\n                this.table.find(\"tbody\").first().append(this._topSection(columnLevels, allDaySlot, rowCount));\n                this.table.find(\"tbody\").first().append(this._bottomSection(columnLevels, rowLevels, rowCount));\n                this.element.append(this.table);\n\n                if (this._isVirtualized()) {\n                    this._updateDomRowLevels();\n                }\n\n                // Enable horizontal scrolling when mobile, grouped and less than 1024px width\n                if (this._isMobile() &&\n                        columnLevels.length > 1 &&\n                        this._groupOrientation() === \"horizontal\" &&\n                        kendo._outerWidth($(window)) < MIN_HORIZONTAL_SCROLL_SIZE ) {\n\n                    this.table.find(\".k-scheduler-content .k-scheduler-table\").width((columnLevels[columnLevels.length - 2].length * 100) + \"%\");\n                    this.table.find(\".k-scheduler-header .k-scheduler-table\").width((columnLevels[columnLevels.length - 2].length * 100) + \"%\");\n                }\n\n                this._scroller();\n            },\n\n            _isVirtualized: function() {\n                return this.options.virtual && this.rowLevels.length > 1 && this._isVerticallyGrouped();\n            },\n\n            _trimRowLevels: function(rowLevels) {\n                var lastGroup = rowLevels[rowLevels.length - 2];\n                var cachedRowLevels = this.cachedRowLevels || [];\n                var levelMarker;\n\n                this._hasContentToRender = true;\n\n                var stopAtLevel = function(levels, index) {\n                    var hasParent = levels[index - 1].length > 0,\n                    parentLevel, parentValue;\n\n                    if (hasParent) {\n                        parentLevel = levels[index - 1][0];\n                        parentValue = levels[index][0].parentValue;\n\n                        return parentLevel.value !== parentValue;\n                    } else {\n                        return true;\n                    }\n                };\n\n                for (var rowLevelIndex = rowLevels.length - 2; rowLevelIndex >= 0; rowLevelIndex--) {\n                    var stop = false;\n                    if (rowLevelIndex > 0 && stopAtLevel(rowLevels, rowLevelIndex)) {\n                        stop = true;\n                        levelMarker = rowLevelIndex;\n                    }\n\n                    cachedRowLevels[rowLevelIndex] = rowLevels[rowLevelIndex].splice(1);\n\n                    if (rowLevelIndex < rowLevels.length - 2 && rowLevels[rowLevelIndex][0].rows.length != 1) {\n                        rowLevels[rowLevelIndex][0].rows = rowLevels[rowLevelIndex + 1];\n                    }\n\n                    if (stop) {\n                        break;\n                    }\n                }\n\n                cachedRowLevels[rowLevels.length - 1] = rowLevels[rowLevels.length - 1].splice(lastGroup[0].rows.length);\n\n                this.cachedRowLevels = cachedRowLevels;\n\n                if (!cachedRowLevels[cachedRowLevels.length - 1].length) {\n                    this._hasContentToRender = false;\n                }\n\n                return {\n                    levelMarker: levelMarker || 0,\n                    rowLevels: rowLevels\n                };\n            },\n\n            createNextLayout: function() {\n                var clone = [];\n                var trimmedRowLevels;\n                var rowLevels;\n                var levelMarker;\n                var rowCount;\n\n                for (var rowLevelIndex = 0; rowLevelIndex < this.cachedRowLevels.length; rowLevelIndex++) {\n                    clone[rowLevelIndex] = this.cachedRowLevels[rowLevelIndex];\n                }\n\n                trimmedRowLevels = this._trimRowLevels(clone);\n                rowLevels = trimmedRowLevels.rowLevels.splice(trimmedRowLevels.levelMarker);\n                levelMarker = trimmedRowLevels.levelMarker;\n                rowCount = rowLevels[rowLevels.length - 1].length;\n\n                delete this._height;\n\n                for (var i = levelMarker; i < this.rowLevels.length; i++) {\n                    this.rowLevels[i] = this.rowLevels[i].concat(rowLevels[i - levelMarker]);\n                }\n\n                this.table\n                    .find(\".k-scheduler-times\").last().find(\"tbody\")\n                    .append(this._times(rowLevels, rowCount, this._isMobile()).find(\"tr\"));\n\n                this._updateDomRowLevels();\n\n                if (levelMarker > 0) {\n                    for (i = 0; i < levelMarker; i++) {\n                        var cell = this.table.find(\"[data-row-level=\" + i + \"]\").last();\n                        var rowSpan = parseInt(cell.attr(\"rowspan\"),10) + rowCount;\n                        cell.attr(\"rowspan\", rowSpan);\n                    }\n                }\n\n                this._virtualContent(rowLevels, this.columnLevels);\n                this.render(this._cachedEvents);\n            },\n\n            _tryRenderContent: function() {\n                var that = this;\n                var bufferHeight = that.table.innerHeight();\n                var height = that.content.find(\"table\").innerHeight();\n                var scrollTop = that.content.scrollTop();\n\n                while (that._hasContentToRender && height - bufferHeight < scrollTop) {\n                    that.createNextLayout();\n                    height = that.content.find(\"table\").innerHeight();\n                }\n            },\n\n            _isSchedulerHeightSet: function() {\n                var el = this.element;\n                var initialHeight, newHeight;\n                    if (el[0].style.height) {\n                        return true;\n                    } else {\n                        initialHeight = el.height();\n                    }\n\n                    el.height(\"auto\");\n                    newHeight = el.height();\n\n                    if (initialHeight != newHeight) {\n                        el.height(\"\");\n                        return true;\n                    }\n                    el.height(\"\");\n                    return false;\n            },\n\n            _updateDomRowLevels: function() {\n                var that = this;\n                var groupCells = that.times.find(\".k-scheduler-group-cell:not([data-row-level])\");\n\n                if (!this._rowLevelIndices) {\n                    this._rowLevelIndices = groupCells.map(function(index, item) {\n                        $(item).attr(\"data-row-level\", index);\n                        return index;\n                    }).toArray().reverse();\n                    return;\n                }\n\n                groupCells = groupCells.toArray().reverse();\n\n                for (var i = 0; i <= groupCells.length; i++) {\n                    $(groupCells[i]).attr(\"data-row-level\", this._rowLevelIndices[i]);\n                }\n            },\n\n            refreshLayout: function() {\n                var that = this,\n                    toolbar = that.element.find(\"> .k-scheduler-toolbar\"),\n                    height = that.element.innerHeight(),\n                    scrollbar = this._scrollbar,\n                    headerHeight = 0,\n                    paddingDirection = this._isRtl ? \"left\" : \"right\";\n\n                for (var idx = 0; idx < toolbar.length; idx++) {\n                    height -= outerHeight(toolbar.eq(idx));\n                }\n\n                if (that.datesHeader) {\n                    headerHeight = outerHeight(that.datesHeader);\n                }\n\n                if (that.timesHeader && outerHeight(that.timesHeader) > headerHeight) {\n                    headerHeight = outerHeight(that.timesHeader);\n                }\n\n                if (that.datesHeader && that.timesHeader) {\n                    var datesHeaderRows = that.datesHeader.find(\"table\").first().find(\"tr\");\n\n                    that.timesHeader.find(\"tr\").height(function(index) {\n                        $(this).height(datesHeaderRows.eq(index).height());\n                    });\n                }\n\n                if (headerHeight) {\n                    height -= headerHeight;\n                }\n\n                if (that.footer) {\n                    height -= outerHeight(that.footer);\n                }\n\n                var contentDiv = that.content[0],\n                    scrollbarWidth = !kendo.support.kineticScrollNeeded ? scrollbar : 0;\n\n                if (this._isSchedulerHeightSet()) { // set content height only if needed\n\n                    if (height > scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                        that.content.height(height);\n                    } else {\n                        that.content.height(scrollbar * 2 + 1);\n                    }\n\n                    if (that.times) {\n                        that.times.height(contentDiv.clientHeight);\n\n                        var timesTable = that.times.find(\"table\");\n                        if (timesTable.length) {\n                            timesTable.height(that.content.find(\"table\")[0].clientHeight);\n                        }\n                    }\n                }\n\n                if (that.table) {\n                    if (contentDiv.offsetWidth - contentDiv.clientWidth > 0) {\n                        that.table.addClass(\"k-scrollbar-v\");\n                        that.datesHeader.css(\"padding-\" + paddingDirection, scrollbarWidth - parseInt(that.datesHeader.children().css(\"border-\" + paddingDirection + \"-width\"), 10));\n                    } else {\n                        that.datesHeader.css(\"padding-\" + paddingDirection, \"0\");\n                    }\n                    if (contentDiv.offsetHeight - contentDiv.clientHeight > 0 || contentDiv.clientHeight > that.content.children(\".k-scheduler-table\").height()) {\n                        that.table.addClass(\"k-scrollbar-h\");\n                    } else {\n                        that.table.removeClass(\"k-scrollbar-h\");\n                    }\n                }\n            },\n\n            _topSection: function(columnLevels, allDaySlot, rowCount) {\n                var thElm = $(\"<tr>\");\n\n                this.timesHeader = timesHeader(columnLevels.length, allDaySlot, rowCount);\n                this.datesHeader = this._datesHeader(columnLevels, allDaySlot);\n\n                var dateGroup = this.datesHeader.find(\".k-nav-day\");\n\n                if (dateGroup.length) {\n                    dateGroup.closest(\"tr\").addClass(\"k-scheduler-date-group\");\n                }\n\n                if (this._isMobile()) {\n                    thElm.addClass(\"k-mobile-header\");\n                    thElm.addClass(\"k-mobile-\" + this._groupOrientation() + \"-header\");\n                }\n\n                return $(thElm).append(this.timesHeader.add(this.datesHeader).wrap(\"<td>\").parent());\n            },\n\n            _bottomSection: function(columnLevels, rowLevels, rowCount) {\n                this.times = this._times(rowLevels, rowCount, this._isMobile());\n\n                this.content = content(columnLevels[columnLevels.length - 1], rowLevels[rowLevels.length - 1]);\n\n                return $(\"<tr>\").append(this.times.add(this.content).wrap(\"<td>\").parent());\n            },\n\n            _scroller: function() {\n                var that = this;\n\n                this.content.on(\"scroll\" + NS, function() {\n                    kendo.scrollLeft(that.datesHeader.find(\">.k-scheduler-header-wrap\"), this.scrollLeft);\n                    that.times.scrollTop(this.scrollTop);\n                    if (that._isVirtualized()) {\n                        that._tryRenderContent();\n                    }\n                });\n\n                var touchScroller = kendo.touchScroller(this.content, {\n                    avoidScrolling: function(e) {\n                        return $(e.event.target).closest(\".k-event.k-event-active\").length > 0;\n                    }\n                });\n\n                if (touchScroller && touchScroller.movable) {\n\n                    this._touchScroller = touchScroller;\n\n                    this.content = touchScroller.scrollElement;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.datesHeader.find(\">.k-scheduler-header-wrap\"), -e.sender.x);\n                        that.times.scrollTop(-e.sender.y);\n                        if (that._isVirtualized()) {\n                            that._tryRenderContent();\n                        }\n                    });\n                }\n            },\n\n            _resourcesForGroups: function() {\n                var result = [];\n                var groups = this.options.group;\n                var resources = this.options.resources;\n\n                groups = groups && groups.resources ? groups.resources : [];\n\n                if (resources && groups.length) {\n                    for (var idx = 0, length = resources.length; idx < length; idx++) {\n                        for (var groupIdx = 0, groupLength = groups.length; groupIdx < groupLength; groupIdx++) {\n                            if (resources[idx].name === groups[groupIdx]) {\n                                result.push(resources[idx]);\n                            }\n                        }\n                    }\n                }\n\n                this.groupedResources = result;\n            },\n\n            _createDateLayout: function(dates, inner, times) {\n                return createDateLayoutConfiguration(\"rows\", dates, inner, times);\n            },\n\n            _createColumnsLayout: function(resources, inner, template, dates, times, parentValue) {\n                return createLayoutConfiguration(\"columns\", resources, inner, template, dates, times, parentValue);\n            },\n\n            _groupOrientation: function() {\n                var groups = this.options.group;\n                return groups && groups.resources ? groups.orientation : \"horizontal\";\n            },\n\n            _isGroupedByDate: function() {\n                return this.options.group && this.options.group.date;\n            },\n\n            _isVerticallyGrouped: function() {\n                return this.groupedResources.length && this._groupOrientation() === \"vertical\";\n            },\n\n            _createRowsLayout: function(resources, inner, template, dates) {\n                return createLayoutConfiguration(\"rows\", resources, inner, template, dates);\n            },\n\n            selectionByElement: function() {\n                return null;\n            },\n\n            clearSelection: function() {\n                this.content\n                    .find(\".k-selected\")\n                    .removeAttr(\"id\")\n                    .removeClass(\"k-selected\");\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(this);\n\n                if (that.table) {\n                    kendo.destroy(that.table);\n                    that.table.remove();\n                }\n\n                if (that.footer) {\n                    that.footer.getKendoToolBar().destroy();\n                    that.footer.remove();\n                }\n\n                that.groups = null;\n                that.table = null;\n                that.content = null;\n                that.times = null;\n                that.datesHeader = null;\n                that.timesHeader = null;\n                that.footer = null;\n                that._resizeHint = null;\n                that._moveHint = null;\n            },\n\n            calendarInfo: function() {\n                return kendo.getCulture().calendars.standard;\n            },\n\n            prevGroupSlot: function(date, groupIndex, isDay) {\n                var collection;\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n\n                if (groupIndex <= 0) {\n                    return;\n                }\n\n                if (this._isGroupedByDate()) {\n                   return slot;\n                }\n\n                if (this._isVerticallyGrouped()) {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(group.daySlotCollectionCount() - 1, true);\n                        return collection.at(slot.index);\n                    } else {\n                        collection = group._collection(isDay ? slot.index : slot.collectionIndex, false);\n                        return collection.last();\n                    }\n                } else {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(slot.collectionIndex, true);\n                        return collection.last();\n                    } else {\n                        collection = group._collection(isDay ? 0 : group.timeSlotCollectionCount() - 1, isDay);\n                        return isDay ? collection.last() : collection.at(slot.index);\n                    }\n                }\n            },\n\n            nextGroupSlot: function(date, groupIndex, isDay) {\n                var collection;\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                var daySlotCollectionCount;\n\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n\n                if (this._isGroupedByDate()) {\n                   return slot;\n                }\n\n                if (this._isVerticallyGrouped()) {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(0, true);\n                        return collection.at(slot.index);\n                    } else {\n                        daySlotCollectionCount = group.daySlotCollectionCount();\n                        collection = group._collection(daySlotCollectionCount ? 0 : slot.collectionIndex, daySlotCollectionCount);\n\n                        return isDay ? collection.first() : collection.at(slot.collectionIndex);\n                    }\n                } else {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(slot.collectionIndex, true);\n                        return collection.first();\n                    } else {\n                        collection = group._collection(0, isDay);\n                        return isDay ? collection.first() : collection.at(slot.index);\n                    }\n                }\n            },\n\n            _eventOptionsForMove: function() {\n                return {};\n            },\n\n            _updateEventForResize: function() {\n                return;\n            },\n\n            _updateEventForSelection: function(event) {\n                return event;\n            },\n\n            _innerElements: function(element, type, inner) {\n                var count = 0,\n                    countInner = function(el) {\n                        var innerSpan = el[inner],\n                            innerEls = el[type],\n                            current, innerCollection, i;\n\n                        if (innerSpan) {\n                            count += innerSpan;\n                            return;\n                        }\n\n                        if (!innerEls || innerEls.length === 0) {\n                            count += 1;\n                            return;\n                        }\n\n                        for (i = 0; i < innerEls.length; i++) {\n                            current = innerEls[i];\n                            innerCollection = current[type];\n\n                            if (innerCollection && innerCollection[0]) {\n                                if (!innerCollection[0][type] || innerCollection[0][type].length === 0) {\n                                    count += innerCollection.length;\n                                } else {\n                                    countInner(current);\n                                }\n                            } else {\n                                count += 1;\n                            }\n                        }\n                    };\n\n                countInner(element);\n\n                return count;\n            },\n\n            _times: function(rowLevels, rowCount, isMobile) {\n                var that = this;\n                var rows = new Array(rowCount).join().split(\",\");\n                var rowHeaderRows = [];\n                var rowIndex;\n\n                for (var rowLevelIndex = 0; rowLevelIndex < rowLevels.length; rowLevelIndex++) {\n                    var level = rowLevels[rowLevelIndex];\n                    var rowsBefore = 0;\n\n                    for (rowIndex = 0; rowIndex < level.length; rowIndex++) {\n                        var currentRow = level[rowIndex];\n                        var className = currentRow.className || \"\";\n                        var text = currentRow.text;\n                        var rowspan = that._innerElements(currentRow, \"rows\");\n\n                        rowsBefore += rowspan;\n\n                        if (currentRow.allDay) {\n                            className = \"k-scheduler-times-all-day\";\n                        }\n\n                        if (isMobile && className.indexOf(\"k-scheduler-group-cell\") !== -1) {\n                            text = '<span class=\"k-scheduler-group-text\">' + text + '</span>';\n                        }\n\n                        rows[rowsBefore - rowspan] += '<th class=\"' + className + '\" rowspan=\"' + rowspan + '\">' + text + \"</th>\";\n                    }\n                }\n\n                for (rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                    rowHeaderRows.push(rows[rowIndex]);\n                }\n\n                if (rowCount < 1) {\n                    return $();\n                }\n\n                return $('<div class=\"k-scheduler-times\">' + table(rowHeaderRows) + '</div>');\n            },\n\n            _datesHeader: function(columnLevels, allDaySlot) {\n                var that = this;\n                var dateTableRows = [];\n                var columnIndex;\n\n                for (var columnLevelIndex = 0; columnLevelIndex < columnLevels.length; columnLevelIndex++) {\n                    var level = columnLevels[columnLevelIndex];\n                    var th = [];\n\n                    for (columnIndex = 0; columnIndex < level.length; columnIndex ++) {\n                        var column = level[columnIndex];\n                        var colspan = that._innerElements(column, \"columns\", \"colspan\");\n\n                        th.push('<th colspan=\"' + (column.colspan || colspan) + '\" class=\"' + (column.className || \"\") + '\">' + column.text + \"</th>\");\n                    }\n\n                    dateTableRows.push(th.join(\"\"));\n                }\n\n                var allDayTableRows = [];\n\n                if (allDaySlot) {\n                    var lastLevel = columnLevels[columnLevels.length - 1];\n                    var td = [];\n                    var cellContent = allDaySlot.cellContent;\n\n                    for (columnIndex = 0; columnIndex < lastLevel.length; columnIndex++) {\n                        td.push('<td class=\"' + (lastLevel[columnIndex].className || \"\") + '\">' + (cellContent ? cellContent(columnIndex) : '&nbsp;') + '</td>');\n                    }\n\n                    allDayTableRows.push(td.join(\"\"));\n                }\n\n                return $(\n                    '<div class=\"k-scheduler-header\">' +\n                        '<div class=\"k-scheduler-header-wrap\">' +\n                            table(dateTableRows) +\n                            allDayTable(allDayTableRows, \"k-scheduler-header-all-day\") +\n                        '</div>' +\n                    '</div>'\n                );\n            },\n\n            _formatEventAriaLabel: function(title, start, end, isAllDay) {\n                var labelMessages = this.options.messages.ariaEventLabel,\n                    sameDate = kendo.date.getDate(start).getTime() === kendo.date.getDate(end).getTime(),\n                    labelText;\n\n                if (typeof(labelMessages) === \"string\") {\n                    return kendo.format(labelMessages, title, start, start);\n                }\n\n                labelText = (labelMessages.prefix + SPACE + title + SPACE + labelMessages.on + SPACE + kendo.toString(start, \"D\")).trim();\n\n                if (isAllDay && sameDate) {\n                    return labelText + SPACE + labelMessages.allDay;\n                } else if (isAllDay) {\n                    return labelText + SPACE + labelMessages.to + SPACE + kendo.toString(end, \"D\") + SPACE + labelMessages.allDay;\n                } else {\n                    labelText = labelText + SPACE + labelMessages.at + SPACE + kendo.toString(start, \"t\") + SPACE + labelMessages.to + SPACE;\n\n                    if (sameDate) {\n                        return labelText + kendo.toString(end, \"t\");\n                    } else {\n                        return labelText + kendo.toString(end, \"D\") + SPACE + labelMessages.at + SPACE + kendo.toString(end, \"t\");\n                    }\n                }\n            }\n        });\n\n        function collidingEvents(elements, start, end) {\n            var idx,\n                index,\n                startIndex,\n                overlaps,\n                endIndex;\n\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                index = rangeIndex(elements[idx]);\n                startIndex = index.start;\n                endIndex = index.end;\n\n                overlaps = startIndex <= start && endIndex >= start;\n\n                if (overlaps || (startIndex >= start && endIndex <= end) || (start <= startIndex && end >= startIndex)) {\n                    if (startIndex < start) {\n                        start = startIndex;\n                    }\n\n                    if (endIndex > end) {\n                        end = endIndex;\n                    }\n                }\n            }\n\n            return eventsForSlot(elements, start, end);\n        }\n\n        function rangeIndex(eventElement) {\n            return {\n                start: eventElement.start,\n                end: eventElement.end\n            };\n        }\n\n        function eventsForSlot(elements, slotStart, slotEnd) {\n            var events = [];\n\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = rangeIndex(elements[idx]);\n\n                if ((event.start < slotStart && event.end > slotStart) || (event.start >= slotStart && event.end <= slotEnd)) {\n                    events.push(elements[idx]);\n                }\n            }\n\n            return events;\n        }\n\n        function createColumns(eventElements) {\n            return _createColumns(eventElements);\n        }\n\n        function createRows(eventElements) {\n            return _createColumns(eventElements);\n        }\n\n        var Color = function(value) {\n            var color = this,\n                formats = Color.formats,\n                re,\n                processor,\n                parts,\n                i,\n                channels;\n\n            if (arguments.length === 1) {\n                value = color.resolveColor(value);\n\n                for (i = 0; i < formats.length; i++) {\n                    re = formats[i].re;\n                    processor = formats[i].process;\n                    parts = re.exec(value);\n\n                    if (parts) {\n                        channels = processor(parts);\n                        color.r = channels[0];\n                        color.g = channels[1];\n                        color.b = channels[2];\n                    }\n                }\n            } else {\n                color.r = arguments[0];\n                color.g = arguments[1];\n                color.b = arguments[2];\n            }\n\n            color.r = color.normalizeByte(color.r);\n            color.g = color.normalizeByte(color.g);\n            color.b = color.normalizeByte(color.b);\n        };\n\n        Color.prototype = {\n            resolveColor: function(value) {\n                value = value || \"#000\";\n\n                if (value.charAt(0) == \"#\") {\n                    value = value.substr(1, 6);\n                }\n\n                value = value.replace(/ /g, \"\");\n                value = value.toLowerCase();\n                value = Color.namedColors[value] || value;\n\n                return value;\n            },\n\n            normalizeByte: function(value) {\n                return (value < 0 || isNaN(value)) ? 0 : ((value > 255) ? 255 : value);\n            },\n\n            percBrightness: function() {\n                var color = this;\n                return math.sqrt(0.241 * color.r * color.r + 0.691 * color.g * color.g + 0.068 * color.b * color.b);\n            },\n\n            isDark: function() {\n                var color = this;\n                var brightnessValue = color.percBrightness();\n                return brightnessValue < 180;\n            }\n        };\n\n        Color.formats = [{\n                re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n                process: function(parts) {\n                    return [\n                        parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n                    ];\n                }\n            }, {\n                re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n                process: function(parts) {\n                    return [\n                        parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n                    ];\n                }\n            }, {\n                re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n                process: function(parts) {\n                    return [\n                        parseInt(parts[1] + parts[1], 16),\n                        parseInt(parts[2] + parts[2], 16),\n                        parseInt(parts[3] + parts[3], 16)\n                    ];\n                }\n            }\n        ];\n\n        Color.namedColors = {\n            aqua: \"00ffff\", azure: \"f0ffff\", beige: \"f5f5dc\",\n            black: \"000000\", blue: \"0000ff\", brown: \"a52a2a\",\n            coral: \"ff7f50\", cyan: \"00ffff\", darkblue: \"00008b\",\n            darkcyan: \"008b8b\", darkgray: \"a9a9a9\", darkgreen: \"006400\",\n            darkorange: \"ff8c00\", darkred: \"8b0000\", dimgray: \"696969\",\n            fuchsia: \"ff00ff\", gold: \"ffd700\", goldenrod: \"daa520\",\n            gray: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n            indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n            lightblue: \"add8e6\", lightgrey: \"d3d3d3\", lightgreen: \"90ee90\",\n            lightpink: \"ffb6c1\", lightyellow: \"ffffe0\", lime: \"00ff00\",\n            limegreen: \"32cd32\", linen: \"faf0e6\", magenta: \"ff00ff\",\n            maroon: \"800000\", mediumblue: \"0000cd\", navy: \"000080\",\n            olive: \"808000\", orange: \"ffa500\", orangered: \"ff4500\",\n            orchid: \"da70d6\", pink: \"ffc0cb\", plum: \"dda0dd\",\n            purple: \"800080\", red: \"ff0000\", royalblue: \"4169e1\",\n            salmon: \"fa8072\", silver: \"c0c0c0\", skyblue: \"87ceeb\",\n            slateblue: \"6a5acd\", slategray: \"708090\", snow: \"fffafa\",\n            steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n            tomato: \"ff6347\", turquoise: \"40e0d0\", violet: \"ee82ee\",\n            wheat: \"f5deb3\", white: \"ffffff\", whitesmoke: \"f5f5f5\",\n            yellow: \"ffff00\", yellowgreen: \"9acd32\"\n        };\n\n        function _createColumns(eventElements) {\n            var columns = [];\n\n            for (var idx = 0; idx < eventElements.length; idx++) {\n                var event = eventElements[idx];\n                var eventRange = rangeIndex(event);\n                var column = null;\n\n                for (var j = 0, columnLength = columns.length; j < columnLength; j++) {\n                    var endOverlaps = eventRange.start > columns[j].end;\n\n                    if (eventRange.start < columns[j].start || endOverlaps) {\n\n                        column = columns[j];\n\n                        if (column.end < eventRange.end) {\n                            column.end = eventRange.end;\n                        }\n\n                        break;\n                    }\n                }\n\n                if (!column) {\n                    column = { start: eventRange.start, end: eventRange.end, events: [] };\n                    columns.push(column);\n                }\n\n                column.events.push(event);\n            }\n\n            return columns;\n        }\n\n        function createDateLayoutConfiguration(name, dates, inner, times) {\n             var configuration = [];\n\n             $.each(dates, function(index, item) {\n                var className = item.className ? \"k-slot-cell \" + item.className : \"k-slot-cell\";\n\n                var obj = {\n                    text: item.text,\n                    className: className\n                };\n\n                if (times && !item.minorTicks) {\n                    obj[name] = createDateLayoutConfiguration(name, item.columns, inner, times);\n                } else {\n                    obj[name] = inner;\n                }\n                configuration.push(obj);\n            });\n\n            return configuration;\n        }\n\n        function createLayoutConfiguration(name, resources, inner, template, dates, times, parentValue) {\n            var resource = resources[0];\n            var configuration = [];\n\n            if (resource) {\n                if (dates && inner) {\n                    $.each(dates, function(index, item) {\n                        if (times && !item.minorTicks) {\n                            item[name] = createLayoutConfiguration(name, resources, item.columns, template, item.columns, times, parentValue);\n                        } else {\n                            item[name] = createLayoutConfiguration(name, resources, null, template, null, null, parentValue);\n                        }\n                    });\n                    configuration = dates;\n                } else {\n                    var data = resource.dataSource.view();\n\n                    data = data.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                    });\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        var value = kendo.getter(resource.dataValueField)(data[dataIndex]);\n                        var obj = {\n                            text: template({\n                                text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex])),\n                                color: kendo.getter(resource.dataColorField)(data[dataIndex]),\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                value: value\n                            }),\n                            className: \"k-slot-cell k-scheduler-group-cell\",\n                            parentValue: parentValue,\n                            value: value\n                        };\n\n                        // filter-out those inner resources that are not relevant\n                        obj[name] = createLayoutConfiguration(name, resources.slice(1), inner, template, dates, times, value);\n\n                        configuration.push(obj);\n                    }\n                }\n                return configuration;\n            }\n            return inner;\n        }\n\n        function groupEqFilter(value) {\n            return function(item) {\n                if (Array.isArray(item) || item instanceof kendo.data.ObservableArray) {\n                    for (var idx = 0; idx < item.length; idx++) {\n                        if (item[idx] == value) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                return item == value;\n            };\n        }\n\n        var selectedStateRegExp = /\\s*k-selected/;\n        function addSelectedState(cell) {\n            cell.className = cell.className.replace(selectedStateRegExp, \"\") + \" k-selected\";\n        }\n\n        $.extend(ui.SchedulerView, {\n            createColumns: createColumns,\n            createRows: createRows,\n            rangeIndex: rangeIndex,\n            collidingEvents: collidingEvents,\n            groupEqFilter: groupEqFilter\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}